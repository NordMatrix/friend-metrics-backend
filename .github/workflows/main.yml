name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: friend_metrics_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup test environment
      run: |
        echo "# Application
        PORT=3000
        NODE_ENV=test

        # Database
        DB_HOST=localhost
        DB_PORT=5432
        DB_USERNAME=postgres
        DB_PASSWORD=postgres
        DB_NAME=friend_metrics_test

        # JWT
        JWT_SECRET=test_secret
        JWT_EXPIRATION=1d

        # Google OAuth
        GOOGLE_CLIENT_ID=test_client_id
        GOOGLE_CLIENT_SECRET=test_client_secret
        GOOGLE_CALLBACK_URL=http://localhost:3001/auth/google/callback" > .env.test
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests with coverage
      run: npm run test:cov
      env:
        NODE_ENV: test
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build and push Docker image
      run: |
        echo "Add your deployment steps here"
        # Example:
        # docker build -t friend-metrics-backend .
        # docker push your-registry/friend-metrics-backend 